local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.Name = "GemSpawnerHub"
screenGui.DisplayOrder = 999  -- 

local backgroundFrame = Instance.new("Frame")
backgroundFrame.Parent = screenGui
backgroundFrame.Size = UDim2.new(0, 180, 0, 105)
backgroundFrame.Position = UDim2.new(0.5, -90, 0.5, -55)
backgroundFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
backgroundFrame.Active = true

local gradient = Instance.new("UIGradient")
gradient.Parent = backgroundFrame
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
})
gradient.Rotation = 90

local corner = Instance.new("UICorner")
corner.Parent = backgroundFrame
corner.CornerRadius = UDim.new(0, 15)

local titleLabel = Instance.new("TextLabel")
titleLabel.Parent = backgroundFrame
titleLabel.Size = UDim2.new(1, -20, 0, 35)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.Text = "Gem Spawner"
titleLabel.TextScaled = true
titleLabel.TextSize = 37
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextStrokeTransparency = 0
titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

local petNameBox = Instance.new("TextBox")
petNameBox.Parent = backgroundFrame
petNameBox.Size = UDim2.new(1, -20, 0, 30)
petNameBox.Position = UDim2.new(0, 10, 0, 35)
petNameBox.PlaceholderText = "amount"
petNameBox.TextScaled = true
petNameBox.TextSize = 20
petNameBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
petNameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
petNameBox.TextStrokeTransparency = 0
petNameBox.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

local inputCorner = Instance.new("UICorner")
inputCorner.Parent = petNameBox
inputCorner.CornerRadius = UDim.new(0, 10)

local dupeButton = Instance.new("TextButton")
dupeButton.Parent = backgroundFrame
dupeButton.Size = UDim2.new(1, -20, 0, 30)
dupeButton.Position = UDim2.new(0, 10, 0, 70)
dupeButton.Text = "Start Spawning"
dupeButton.TextScaled = true
dupeButton.BackgroundTransparency = 1
dupeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
dupeButton.TextStrokeTransparency = 0
dupeButton.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)

local buttonCorner = Instance.new("UICorner")
buttonCorner.Parent = dupeButton
buttonCorner.CornerRadius = UDim.new(0, 10)

local toggleButton = Instance.new("TextButton")
toggleButton.Parent = screenGui
toggleButton.Size = UDim2.new(0, 40, 0, 40)
toggleButton.Position = UDim2.new(0.5, -20, 0, -10)
toggleButton.Text = ""
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)

local toggleButtonCorner = Instance.new("UICorner")
toggleButtonCorner.Parent = toggleButton
toggleButtonCorner.CornerRadius = UDim.new(0, 20)

local toggleGradient = Instance.new("UIGradient")
toggleGradient.Parent = toggleButton
toggleGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
})
toggleGradient.Rotation = 90

-- 
local function toggleVisibility()
    backgroundFrame.Visible = not backgroundFrame.Visible
end

toggleButton.MouseButton1Click:Connect(toggleVisibility)

-- 
dupeButton.MouseButton1Down:Connect(function()
    dupeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dupeButton.BackgroundTransparency = 0.5
end)

dupeButton.MouseButton1Up:Connect(function()
    dupeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dupeButton.BackgroundTransparency = 1
end)

dupeButton.MouseButton1Click:Connect(function()
    local inputText = petNameBox.Text
    local desiredAmount = tonumber(inputText)
    
    if desiredAmount and desiredAmount > 0 then
        local library = require(game.ReplicatedStorage.Library.Client.CurrencyCmds)
        local originalGetFunction = library.Get
        local currentDiamonds = originalGetFunction("Diamonds")
        
        -- 
        library.Get = function(currencyId)
            if currencyId == "Diamonds" then
                return currentDiamonds + desiredAmount
            else
                return originalGetFunction(currencyId)
            end
        end
        
        -- 
        local newDiamonds = currentDiamonds + desiredAmount
        --
        library.Set("Diamonds", newDiamonds)
    else
        warn("Invalid amount entered")
    end
end)

local dragging = false
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    backgroundFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

backgroundFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = backgroundFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

backgroundFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)
